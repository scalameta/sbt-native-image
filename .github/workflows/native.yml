name: Native Image
on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]
jobs:
  unix:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        include:
          # Replace "example" with the name your binary
          - os: macOS-latest
            artifact: example-x86_64-apple-darwin
            binary: example/target/native-image/example
          - os: ubuntu-latest
            artifact: example-x86_64-pc-linux
            binary: example/target/native-image/example
    steps:
      - uses: actions/checkout@v2
      - uses: olafurpg/setup-scala@v6
      - run: git fetch --tags || true
      - run: sbt example/nativeImage
      - uses: actions/upload-artifact@master
        with:
          path: ${{ matrix.binary }}
          name: ${{ matrix.artifact }}
      - name: Upload release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ matrix.binary }}
          asset_name: ${{ matrix.artifact }}
          asset_content_type: application/zip
  windows:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        include:
          # Replace "example" with the name your binary
          - os: windows-latest
            artifact: example-x86_64-pc-win32.exe
            binary: example\target\native-image\example.exe
    steps:
      - uses: actions/checkout@v2
      - name: Configure Pagefile
        uses: al-cheb/configure-pagefile-action@v1.2
      - name: Refresh Pagefile
        run: |
          (Get-CimInstance Win32_PageFileUsage).AllocatedBaseSize
      - uses: olafurpg/setup-scala@v7
        with:
          java-version: graalvm-ce-java11@20.1.0
      - name: gu install native-image
        shell: bash
        run: |
          echo $JAVA_HOME
          "$JAVA_HOME\bin\gu.cmd" install native-image
      - name: sbt test
        shell: cmd
        run: >-
          "C:\Program Files (x86)\Microsoft Visual
          Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && sbt
          example/nativeImage
      - uses: actions/upload-artifact@master
        with:
          path: ${{ matrix.binary }}
          name: ${{ matrix.artifact }}
      - name: Upload release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ matrix.binary }}
          asset_name: ${{ matrix.artifact }}
          asset_content_type: application/zip
